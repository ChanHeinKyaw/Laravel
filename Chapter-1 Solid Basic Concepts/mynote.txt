1.Route တွေ က web.php က နေ စ ပြီး run တယ်
2.laravel က return ပြန်ပေးရင် json format ကို auto ပြောင်းပြီး return ပြန်ပေးတယ်
3.hardcoding ဆိုတာ code တွေကို အသေရေးထားတယ် ပြောင်းလဲ နိုင် ခြင်း မရှိတဲ့ code တွေကို ပြောတာ
4.laravel မှာ လက်ရှိရောက်နေတဲ့ file path ကို သိချင်ရင် __DIR__ နဲ့ ကြည့်လို့ရတယ်။
5.php မှာ file တွေ ကို ယူချင်ရင် file_get_contents() function နဲ့ ယူလို့ရတယ်။
6.wild card ဆိုတာ url မှာ data ကို dynamic ဖြစ်စေချင်ရင် သုံးတာ (eg => /blogs/{blog}) 
7.string တွေကို '' single code နဲ့ ရေးရင် အဲ့ထဲမှာ variable name တွေ အလုပ်မလုပ်ဘူး။ "" Double ပြောင်းပေးရတယ်။
8.php မှာ file_exists ဆိုတဲ့ function က file ရှိမရှိ စစ်ဖို့ သုံးတယ်။
9.laravel မှာ dd က debug လိုက်ဖို့ သုံးတယ်။ သူ့ရဲ့ အရှည် က Dump and Die လို့ခေါတယ်။
10. laravel မှာ redirect က page တွေ redirect လုပ်ချင်ရင် သုံးတယ် redirect လုပ်ပြီးသွား ရင် return ပြန်‌ပေးဖို့လည်း လိုတယ် 
    return ပြန် မထားရင် အောက် code တွေ အလုပ်ဆက်လုပ် ပြီး error တက်သွားလိမ့်မယ်။
11. abort() function က error page တွေ ပြန် ဖို့ အတွက် သုံးတယ်။
12.laravel မှာ wildcard ကို Alpha တွေ ပဲ လက်ခံမယ်ဆိုရင် where('wildcard_name','regular_expression') နဲ့ စစ်လို့ရတယ်။
    whereAlpha('wildcard_name') က wildcard name မှာ alpha တွေ ပဲ လက်ခံမယ် ဆိုပြီး regular expression မပါပဲ တခါတည်း စစ်လိုက်တာ
    whereNumber('wildcard_name') က wildcard name မှာ number တွေ ပဲ လက်ခံမယ် ဆိုပြီး regular expression မပါပဲ တခါတည်း စစ်လိုက်တာ
    whereAlphaNumeric('wildcar_name') က wildcard name မှာ number နဲ့ alpha တွေ ပဲ လက်ခံမယ် ဆိုပြီး regular expression မပါပဲ တခါတည်း စစ်လိုက်တာ။
    လက်မခံထားတဲ့ name တွေ ပါလာရင် 404 page ကို တခါတည်း ခေါသွားတယ်။ အခု လို စစ်တာ ကို wildcard contraint လို့ခေါတယ်။
13.laravel မှာ CPU အလုပ်တွေကို လျော့ ချ ချင်ရင် Cache သုံးလို့ရတယ်။ Cache မှာ remenber ဆိုတဲ့  function တစ်ခု ရှိတယ်။ remember မှာ param (3) ခု
   လိုတယ်။ 1. unique key, 2. time , 3. function သုံးခု ထည့်ပေးရတယ်။ remember က data တွေကို return ပြန် ပေးရတယ်။
14.laravel မှာ now() function က date တွေကို တိုးချင် လျော့ ချင်ရင် သုံးတယ်။
   1. now()->addWeek();
   2. now()->addDay();
   ....
15.laravel မှာ default ပါ ပြီးသား folder တွေရဲ့ path လမ်းကြောင်းကို ခေါ ချင်ရင် foldername_path() function နဲ့ ခေါလို့ရတယ်။ eg. resource_path()
16.laravel မှာ file တွေကို လှမ်းယူချင်ရင် Facades/File ကို သုံး လို့ရတယ် သူ့မှာ files ဆိုတဲ့ methods ရှိတယ်။ eg. File::files(resource_path('blogs'));
    Array return ပြန် ပေးရတယ်။ $files[0]->getContents() ဆိုပြီး ထုတ်လိုက်ရင် ပထမ array ရဲ့ html content တွေ ရလာတယ်။
17.php မှာ array တစ်ခု ကို အခြေ ခံပြီး လိုချင်တဲ့ data ကို နောက်ထပ် Array တစ်ခု နဲ့ လိုချင်ရင် array_map() function ကို သုံးပေးရတယ်။
    array_map() function မှာ param (2)ခု လို တယ်။ ပထမ တစ်ခု က function နဲ့ ဒုတိယ တစ်ခု က အ‌ခြေခံချင်တဲ့ Array ထည့်ပေးရတယ်။
18.install yaml-front-matter package 
    composer require spatie/yaml-front-matter
19.laravel ရဲ့ collection က array တွေကို အခြေခံ ပြီး array တွေကို တစ်ခုနဲ့ တစ်ခု map လုပ်ချင်လား filter လုပ်ချင်တာလား ပထမ item ကို 
    ဆွဲထုတ်ချင်လား။ နောက် ဆုံး item ကို ဆွဲထုတ် ချင်လား အဲ့လို‌တွေ အသုံး ပြုလိုက်ရပါတယ်။
20.static methods တွေကို ခေါ် ချင်ရင် static keyword နဲ့ ခေါ် သုံးလို့ရတယ်။
    laravel collection ရဲ့ အားသာချက် က array ကို collection နဲ့ အုပ်ထားတာ ဖြစ်လို့ 
    array ရဲ့ ပထမ ဆုံး item ကို လိုချင်ရင် first(), နောက် ဆုံး item ကို လိုချင်ရင် last() နဲ့ ခေါ် သုံးပေးရတယ်။
    တခြား အားသာချက် တွေလည်း ရှိသေးတယ်။
21.laravel ရဲ့ tinker ကို သုံးချင်ရင်
    cmd မှာ php artisan tinker လို့ ရိုက်ပြီး laravel tinker ကို ဖွင့်လိုက်ပါ။
    tiner မှာ php code တွေ run လို့ရသလို laravel code တွေလည်း run လို့ရပါတယ်။
    eg(1)
    $num = 1; // 1
    $num + 2; // 3

    eg(2)
    $nums = collect([1,2,3,4]); // [1,2,3,4]
    $nums->take(2); // [1,2]
22.{{  }} // HTML code တွေကို Escape လုပ်တယ်။
    {!!  !!} // HTML code တွေကို Escape မလုပ်ဘူး။
23.Eloquent Model ဆိုတာ App ထဲ က Models ထဲ က  file တွေကို ပြောတာ။

run => php artisan tinker
    // new App\Models\User;
    // new User;
    $user = new User;
    $user->name = "MgMg";
    $user->email = "mgmg@gmail.com";
    $user->password = bcrypt("password");
    $user->save();

    User::find(1);
    User::findOrFail(11111);   // return ModelNotFoundException;

    $user->all(); 
    $user->pluck('name');
    $user->first();
    $user->last();
    $users->map(function($user){
        return $user->name;
    });
24.table name က blogs နဲ့ ပေးထားရင် model name က Blog ဆိုတဲ့ name နဲ့ ပေးရမယ်။
    eg , students => Student

    // Create Table
    php artisan make:migration create_blogs_table

    // Create Model
    php artisan make:model Blog

    // Create Blog Data
    run => php artisan tinker
    $blog = new Blog;
    $blog->title = "this is title";
    $blog->intro = "this is intro";
    $blog->body = "thi is body";
    $blog->save();

25. run => php artisan tinker
    Blog::create([
        'title' => 'this is new title two',
        'intro' => 'this is new intro two',
        'body' => 'this is new body two'
    ]);

    error => MassAssignmentException;

    MassAssignmentException က Blog ဆိုတဲ့ Model ထဲမှာ title, intro, body ဆိုတဲ့ value တွေကို fillable ဆိုတဲ့ property ထဲမှာ allow လုပ်ပေးဖို့
    လိုတယ်လို့ ပြောတာပါ။

    protected $fillable = ['title','intro','body']; 
    // fillable က title, intro, body ဆိုတဲ့ value တွေပါလာရင် allow လုပ်ပေးမယ်လို့ပြောတာ။

    protected $guarded = ['id'];
    // guarded က id ဆိုတဲ့ value ပါလာရင် ignore လုပ်ပေးမယ်လို့ပြောတာ။
    တကယ် လို့ $guarded = [] လို့ပဲ ရေးရင် ပါလာတဲ့ value တွေအကုန်လုံးကို ignore လုပ်ပေးမယ်လို့ပြောတာ။

26. php artisan migrate:fresh ဆိုတဲ့ command ကို production server ပေါ် မှာ confirmation လုပ်စေချင်ရင် 
    env file ထဲက APP_ENV မှာ production လို့ ပြောင်းပေးရမယ်။

    route model binding ကို သုံးရင် findOrFail နဲ့ ရှာပေးတယ် findOrFail က default အနေနဲ့ id ကို ပဲ ရှာပေးတယ် အဲ့တော့ slug နဲ့ ရှာချင်ရင်
    wildcard ရဲ့ နောက် မှာ ":" နဲ့ column name ထည့်ပေးရတယ်။ eg => "/blog/{blog:slug}"

27.  Blog တစ်ခု က Category တစ်ခုနဲ့ ပဲ သက်ဆိုင်တယ် ဆိုရင် belongsTo ကို သုံး။
    တခြား table က id ကို လှမ်းခေါ် ချင်ရင် laravel မှာ forgeinId နဲ့‌ ခေါ် ပေးရတယ်။